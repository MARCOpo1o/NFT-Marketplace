<h1>This is home page</h1>
<a href="/logout">Logout</a>
   <!-- upload files to public/images/users/d789s7d89ad89sd8sa9/FILE.jpg -->
User ID: <%= user._id %> 


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">
  
  <title>Node File Uploads</title>
</head>
<body>
  <div class="container">
    <h1>File Upload</h1>
    <%= typeof msg != 'undefined' ? msg : '' %>
    <form action="/upload" method="POST" enctype="multipart/form-data">
      <div class="file-field input-field">
        <div class="btn grey">
          <span>File</span>
          <input name="myImage" type="file">
        </div>
        <div class="file-path-wrapper">
          <input class="file-path validate" type="text">
        </div>
      </div>
      <button type="submit" class="btn">Submit</button>
    </form>
    <br>
    <img src="<%= typeof file != 'undefined' ? file : '' %>" class="responsive-img">
  </div>

  <script
  src="https://code.jquery.com/jquery-3.2.1.min.js"
  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
  crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>  

  
</body>
</html>

<!-- https://www.leewayhertz.com/develop-nft-marketplace-platform/ -->
<!-- console.log??? -->
brew install flow-cli
mkdir nft_folder_project
cd nft_folder_project


pub resource Collection: NFTReceiver {
    pub var ownedNFTs: @{UInt64: NFT}
    pub var metadataObjs: {UInt64: { String : String }}
    init () {
    self.ownedNFTs <- {}
    self.metadataObjs = {}
    }
    pub fun withdraw(withdrawID: UInt64): @NFT {
    let token <- self.ownedNFTs.remove(key: withdrawID)!
    return <-token
    }
    pub fun deposit(token: @NFT, metadata: {String : String}) {
    self.metadataObjs[token.id] = metadata
    self.ownedNFTs[token.id] <-! token
    }
    pub fun idExists(id: UInt64): Bool {
    return self.ownedNFTs[id] != nil
    }
    pub fun getIDs(): [UInt64] {
    return self.ownedNFTs.keys
    }
    pub fun updateMetadata(id: UInt64, metadata: {String: String}) {
    self.metadataObjs[id] = metadata
    }
    pub fun getMetadata(id: UInt64): {String : String} {
    return self.metadataObjs[id]!
    }
    destroy() {
    destroy self.ownedNFTs
    }
    }